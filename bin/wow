#!/usr/bin/env node
'use strict';
var downloader = require('../lib/downloader');
var log = require('npmlog');
var path = require('path');
var rimraf = require('rimraf');
var async = require('async');
var archy = require('archy');
var util = require('util');
var argv = require('minimist')(process.argv.slice(2), {
  string: ['source'],
  boolean: ['h', 'help'],
  alias: {
    'concur': 'c',
    'source': 's',
    'version': 'v'
  },
  default: {
    'cache': true
  }
});
log.heading = 'wow';
var curseregex = /curse\:\/\/www\.curse\.com\/wow-addons\/([^\s\n\/]+)\/([0-9]+)\/download-client/;

function help() {
  console.log('wow: World Of Warcraft Addon Manager');
  console.log('     Completely unassociated with Blizzard');
  console.log('   ');
  console.log('    sources: List available addon sources');
  console.log('  Installing:');
  console.log('    install <addon-name>: Install an addon');
  console.log('        -s --source Select the source of the addon. Defaults to `curse`');
  console.log('        -v --version Install a specific version of the addon.');
  console.log('           --cache <true/false> Enable or disable the cache. Defaults to true');
  console.log('    checkupdate <addon>: Check if there\'s an update to an addon');
  console.log('    update [addon]: Updates all addons, or the addon in the first argument.');
  console.log('        -c --concur How many downloads to run when updating all the addons.');
  console.log('                    Default: 1. Recommended: 1-4.');
  console.log('    uninstall <addon-name>: Uninstall a previously installed addon');
  console.log('  Managing:');
  console.log('    installed: List installed addons');
  console.log('    ls, folders: List addons and their folders');
  console.log('    blame <folder>: Figure out which addon an addon folder is from');
  console.log('    ');
  console.log('    wow-cli is licensed under the MIT license');
  console.log('    https://github.com/zekesonxx/wow-cli');
}

//Figure out the user's WoW install directory
var wowdir;
if (process.env.WOWPATH) {
  wowdir = path.resolve(process.env.WOWPATH);
} else {
  log.warn('path', 'Using default WoW path, please set the WOWPATH env variable');
  wowdir = path.join('C:', 'Program Files (x86)', 'World Of Warcraft');
}

var addonsdir = path.join(wowdir, 'Interface', 'AddOns');
var savefile = path.join(wowdir, '.addons.json');
var save = require('../lib/save')(savefile);

var wow = require('../lib')(wowdir);
if (argv._.length === 0 || argv.h || argv.help) {
  help();
  process.exit(0);
}

/**
 * Capture curse:// URLs
 * Used by the Curse Client
 */

var match = curseregex.exec(argv._.join(' '));
if (match) {
  //it is
  wow.install(match[1], match[2], function(err) {
    if (err) throw err;
    process.exit(0);
  });
} else {
  switch (argv._[0]) {
    case 'install':
      if (argv._.length !== 2) { help(); process.exit(0); }
      var addon = argv._[1];
      console.log(argv);
      wow.install(argv.source || 'curse', addon, argv.v || null, !argv.cache || false, function(err) {
        if (err) throw err;
        console.log('Installed!');
      });
      break;
    case 'uninstall':
    case 'remove':
      if (argv._.length !== 2) { help(); process.exit(0); }
      var addon = argv._[1];
      wow.uninstall(addon, function(err) {
        if (err && err=='notfound') return console.log('Addon not found');
        if (err) throw err;
        console.log('Addon successfully uninstalled.');
      });
      break;
    case 'installed':
      save._read(function(err, data) {
        if (err) throw err;
        var names = Object.keys(data.addons);
        console.log(names.length + ' addon' + (names.length !== 1 ? 's' : '') + ' installed');
        names.forEach(function(addon) {
          console.log('- '+addon);
        });
      });
      break;
    case 'checkupdate':
      if (argv._.length !== 2) { help(); process.exit(0); }
      var addon = argv._[1];
      downloader.scrapeCurseDownloadURL(addon, function(err, url, version) {
        if (err) throw err;
        save._read(function(err, savefile) {
          if (err) throw err;
          if (savefile.addons[addon].version < version) {
            console.log('Update Available! Install using $ wow install %s', addon);
          } else {
            console.log('No updated version found');
          }
        });
      });
      break;
    case 'update':
      var addons = [];
      if (argv._.length === 2) {
        //one addon
        var addon = argv._[1];
        wow.update(addon, function(err, updated) {
          if (err) throw err;
          if (!updated) {
            console.log('No updates available.');
          }
        });
      } else {
        //all the addons
        var updated = 0;
        var concur = argv.concur || 1;
        var queue = async.queue(function(addon, cb) {
          //you could just pass wow.queue to this
          //but then you can't have a counter
          wow.update(addon, function(err, hadupdate) {
            if (hadupdate) updated++;
            cb(err);
          });
        }, concur);
        save._read(function(err, savefile) {
          if (err) throw err;
          queue.push(Object.keys(savefile.addons));
          queue.drain = function(err) {
            if (err) throw err;
            console.log('%s addon(s) updated', updated);
          };
        });
      }
      break;
    case 'ls':
    case 'folders':
      save._read(function(err, savefile) {
        if (err) throw err;
        var folders = [];
        Object.keys(savefile.addons).forEach(function(addon) {
          var addondata = savefile.addons[addon];
          folders.push({
            label: util.format('[%s:%s r%s]', addondata.source, addon, addondata.version),
            nodes: addondata.folders.sort()
          });
        });
        folders.sort();
        console.log(archy({
          label: addonsdir,
          nodes: folders
        }));
      });
      break;
    case 'sources':
      console.log('Available Sources: %s', wow.sources().join(', '));
      break;
    case 'blame':
      if (argv._.length !== 2) { help(); process.exit(0); }
      wow.blame(argv._[1], function(err, addons) {
        if (err) throw err;
        console.log('Folder %s is from %s', argv._[1], addons.join(', '));
      });
      break;
    default:
      help();
      break;
  }
}